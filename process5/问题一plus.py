import numpy as np
from scipy import stats

# 给定的数据
CJ1 = np.array([
    9.5411, 9.4120, 9.8535, 9.4772, 8.5901, 8.4565, 9.9758, 9.5409, 10.3845, 5.9270,
    7.4591, 9.4055, 7.1470, 8.9287, 8.2887, 8.0881, 8.8431, 7.7374, 8.9373, 9.6263,
    8.7969, 8.6362, 8.7927, 8.0617, 9.0614, 9.6527, 9.2778, 10.1104, 9.4489, 8.7133,
    8.5000, 8.4007, 9.2704, 9.1614, 7.1539, 8.2657, 9.6395, 8.0104, 8.6367, 8.8027,
    9.3830, 8.4104, 8.3472, 8.7318, 8.6017, 9.5406, 8.9190, 7.1712, 7.9794, 9.4056
])


CJ2 = np.array([
    12.5807, 11.7967, 12.8777, 12.7706, 13.5902, 12.5331, 14.2570, 12.3067, 13.5853, 13.3751,
    13.2706, 13.4288, 14.3062, 13.7290, 13.4965, 12.3742, 13.0258, 13.5506, 15.9122, 12.8313,
    15.1473, 14.2140, 12.8277, 13.1000, 15.2333, 12.0352, 12.8536, 13.9157, 13.6091, 14.3926,
    14.5979, 14.9424, 13.0390, 13.7143, 14.6103, 16.6052, 14.5476, 12.0080, 14.4092, 15.3018,
    12.7187, 14.0937, 13.3463, 13.5376, 14.0591, 14.9724, 15.5651, 14.8412, 12.8576, 13.4064
])

CJ3 = np.array([
    13.4364, 11.9632, 13.1807, 12.2255, 14.7985, 13.7653, 12.2397, 13.2147, 14.6742, 13.3891,
    12.4956, 12.1429, 14.2665, 11.6067, 12.8831, 13.7783, 12.3064, 15.0108, 13.1250, 11.8440,
    13.1021, 12.8301, 12.7488, 12.6138, 12.6798, 11.5197, 14.2815, 13.0256, 13.5301, 13.0397,
    14.1963, 12.8083, 12.7954, 13.5256, 13.8175, 13.5404, 12.1903, 13.3083, 12.0479, 12.5494,
    13.1203, 12.1342, 10.7985, 14.5233, 13.4902, 12.9085, 11.7632, 12.0618, 13.8540, 13.1092
])

CJ4 = np.array([
    10.7494, 12.7447, 10.6988, 11.8836, 10.4862, 11.2877, 9.4434, 11.5510, 10.5771, 12.5106,
    10.8101, 9.8395, 10.3013, 11.4359, 11.7964, 11.0032, 12.9151, 11.2942, 9.9469, 11.1640,
    9.9671, 13.3774, 11.8328, 11.8967, 10.3288, 11.3656, 11.6098, 10.2222, 11.6478, 10.7172,
    10.6767, 12.5261, 10.3054, 11.5047, 12.1867, 14.5267, 10.3521, 9.9351, 10.6824, 12.1522,
    11.7665, 11.1685, 10.5381, 10.5991, 11.7907, 10.8876, 13.6173, 9.2316, 12.7690, 9.8535
])

# 计算均值、方差和最值
mean_CJ1 = np.mean(CJ1)
variance_CJ1 = np.var(CJ1)
min_value_CJ1 = np.min(CJ1)
max_value_CJ1 = np.max(CJ1)

mean_CJ2 = np.mean(CJ2)
variance_CJ2 = np.var(CJ2)
min_value_CJ2 = np.min(CJ2)
max_value_CJ2 = np.max(CJ2)

mean_CJ3 = np.mean(CJ3)
variance_CJ3 = np.var(CJ3)
min_value_CJ3 = np.min(CJ3)
max_value_CJ3 = np.max(CJ3)

mean_CJ4 = np.mean(CJ4)
variance_CJ4 = np.var(CJ4)
min_value_CJ4 = np.min(CJ4)
max_value_CJ4 = np.max(CJ4)

# 计算概率分布
kde_CJ1 = stats.gaussian_kde(CJ1)
kde_CJ2 = stats.gaussian_kde(CJ2)
kde_CJ3 = stats.gaussian_kde(CJ3)
kde_CJ4 = stats.gaussian_kde(CJ4)

# 打印结果
print("CJ1:")
print("均值:", mean_CJ1)
print("方差:", variance_CJ1)
print("最小值:", min_value_CJ1)
print("最大值:", max_value_CJ1)
print("概率密度函数:")
x_CJ1 = np.linspace(np.min(CJ1), np.max(CJ1), 100)
y_CJ1 = kde_CJ1.evaluate(x_CJ1)


print("\nCJ2:")
print("均值:", mean_CJ2)
print("方差:", variance_CJ2)
print("最小值:", min_value_CJ2)
print("最大值:", max_value_CJ2)
print("概率密度函数:")
x_CJ2 = np.linspace(np.min(CJ2), np.max(CJ2), 100)
y_CJ2 = kde_CJ2.evaluate(x_CJ2)


print("\nCJ3:")
print("均值:", mean_CJ3)
print("方差:", variance_CJ3)
print("最小值:", min_value_CJ3)
print("最大值:", max_value_CJ3)
print("概率密度函数:")
x_CJ3 = np.linspace(np.min(CJ3), np.max(CJ3), 100)
y_CJ3 = kde_CJ3.evaluate(x_CJ3)


print("\nCJ4:")
print("均值:", mean_CJ4)
print("方差:", variance_CJ4)
print("最小值:", min_value_CJ4)
print("最大值:", max_value_CJ4)
print("概率密度函数:")
x_CJ4 = np.linspace(np.min(CJ4), np.max(CJ4), 100)
y_CJ4 = kde_CJ4.evaluate(x_CJ4)

